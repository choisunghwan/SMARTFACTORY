<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ui600">
	<select id="CPMES_UI610_searchuser" parameterType="hashmap" resultType="hashmap">
	<![CDATA[  
	SELECT USER_ID_CP
      ,USER_NAME_CP
      ,USER_PW_CP
      ,USER_AUTH_CP
      ,USER_DISP_CP
      ,JOIN_DATE_CP
      ,CREATE_DATE_CP
      ,CREATE_USER_CP
      ,UPDATE_DATE_CP
      ,UPDATE_USER_CP
  FROM dbo.TB_USER_CP
WHERE USER_AUTH_CP ='SYS003'
ORDER BY USER_NAME_CP
		]]>
	</select>
	<select id="CPMES_UI610_searchwork" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	SELECT R_ORDER_PK_CP
      ,R_ORDER_DETAIL_PK_CP
      , CASE WHEN #{pWork}='1' AND P1_WORK_START_DATE_CP IS NULL THEN ''
	         WHEN #{pWork}='1' AND P1_WORK_START_DATE_CP IS NOT NULL THEN '▶'
			 WHEN #{pWork}='2' AND P2_WORK_START_DATE_CP IS NULL THEN ''
	         WHEN #{pWork}='2' AND P2_WORK_START_DATE_CP IS NOT NULL THEN '▶'
			 WHEN #{pWork}='3' AND P3_WORK_START_DATE_CP IS NULL THEN ''
	         WHEN #{pWork}='3' AND P3_WORK_START_DATE_CP IS NOT NULL THEN '▶'
			 WHEN #{pWork}='4' AND P4_WORK_START_DATE_CP IS NULL THEN ''
	         WHEN #{pWork}='4' AND P4_WORK_START_DATE_CP IS NOT NULL THEN '▶'
	    END AS STATUS_IMG_CP
      , CASE WHEN #{pWork}='1' AND P1_WORK_START_DATE_CP IS NULL THEN '작업지시'
	         WHEN #{pWork}='1' AND P1_WORK_START_DATE_CP IS NOT NULL THEN '작업중'
			 WHEN #{pWork}='2' AND P2_WORK_START_DATE_CP IS NULL THEN '작업지시'
	         WHEN #{pWork}='2' AND P2_WORK_START_DATE_CP IS NOT NULL THEN '작업중'
			 WHEN #{pWork}='3' AND P3_WORK_START_DATE_CP IS NULL THEN '작업지시'
	         WHEN #{pWork}='3' AND P3_WORK_START_DATE_CP IS NOT NULL THEN '작업중'
			 WHEN #{pWork}='4' AND P4_WORK_START_DATE_CP IS NULL THEN '작업지시'
	         WHEN #{pWork}='4' AND P4_WORK_START_DATE_CP IS NOT NULL THEN '작업중'
		END AS STATUS_NM_CP
	  , CASE WHEN #{pWork} = '1' THEN '제관공정'  
	         WHEN #{pWork} = '2' THEN '용접공정' 
			 WHEN #{pWork} = '3' THEN '가공공정' 
			 WHEN #{pWork} = '4' THEN '조립공정' 
		END AS WORK_NM_CP
	  , (SELECT '['+R_ORDER_NO_CP + '] ' + R_ORDER_NAME_CP FROM TB_RECEIVE_ORDER_CP WHERE R_ORDER_PK_CP = A.R_ORDER_PK_CP) AS ORDER_NAME_CP
	  , (SELECT '['+PRODUCT_NO_CP + '] ' + PRODUCT_NAME_CP FROM TB_RECEIVE_ORDER_DETAIL_CP WHERE R_ORDER_DETAIL_PK_CP = A.R_ORDER_DETAIL_PK_CP) AS PRODUCT_NAME_CP
	  , CASE WHEN #{pWork}='1' AND P1_PLAN_DATE_CP IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE_CP, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE_CP, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE_CP, 7,2)
	         WHEN #{pWork}='2' AND P1_PLAN_DATE_CP IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE_CP, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE_CP, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE_CP, 7,2)
			 WHEN #{pWork}='3' AND P1_PLAN_DATE_CP IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE_CP, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE_CP, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE_CP, 7,2)
			 WHEN #{pWork}='4' AND P1_PLAN_DATE_CP IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE_CP, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE_CP, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE_CP, 7,2)
		ELSE ''
		END AS PLAN_DATE_CP
	  , CASE WHEN #{pWork}='1' AND P1_WORKER_CP IS NOT NULL THEN (SELECT USER_NAME_CP FROM dbo.TB_USER_CP WHERE USER_ID_CP = A.P1_WORKER_CP) 
	         WHEN #{pWork}='2' AND P2_WORKER_CP IS NOT NULL THEN (SELECT USER_NAME_CP FROM dbo.TB_USER_CP WHERE USER_ID_CP = A.P2_WORKER_CP) 
			 WHEN #{pWork}='3' AND P3_WORKER_CP IS NOT NULL THEN (SELECT USER_NAME_CP FROM dbo.TB_USER_CP WHERE USER_ID_CP = A.P3_WORKER_CP) 
			 WHEN #{pWork}='4' AND P4_WORKER_CP IS NOT NULL THEN (SELECT USER_NAME_CP FROM dbo.TB_USER_CP WHERE USER_ID_CP = A.P4_WORKER_CP) 
		ELSE ''
		END AS WORKER_CP

	  , CASE WHEN #{pWork}='1' AND P1_WORK_START_DATE_CP IS NOT NULL THEN SUBSTRING(P1_WORK_START_DATE_CP, 1,4) + '-' +  SUBSTRING(P1_WORK_START_DATE_CP, 5,2) + '-' + SUBSTRING(P1_WORK_START_DATE_CP, 7,2)
			 WHEN #{pWork}='2' AND P2_WORK_START_DATE_CP IS NOT NULL THEN SUBSTRING(P2_WORK_START_DATE_CP, 1,4) + '-' +  SUBSTRING(P2_WORK_START_DATE_CP, 5,2) + '-' + SUBSTRING(P2_WORK_START_DATE_CP, 7,2)
			 WHEN #{pWork}='3' AND P3_WORK_START_DATE_CP IS NOT NULL THEN SUBSTRING(P3_WORK_START_DATE_CP, 1,4) + '-' +  SUBSTRING(P3_WORK_START_DATE_CP, 5,2) + '-' + SUBSTRING(P3_WORK_START_DATE_CP, 7,2)
			 WHEN #{pWork}='4' AND P4_WORK_START_DATE_CP IS NOT NULL THEN SUBSTRING(P4_WORK_START_DATE_CP, 1,4) + '-' +  SUBSTRING(P4_WORK_START_DATE_CP, 5,2) + '-' + SUBSTRING(P4_WORK_START_DATE_CP, 7,2)
		ELSE ''
		END AS WORK_START_DATE_CP 	
	  , CASE WHEN #{pWork}='1' AND P1_WORK_END_DATE_CP IS NOT NULL THEN SUBSTRING(P1_WORK_END_DATE_CP, 1,4) + '-' +  SUBSTRING(P1_WORK_END_DATE_CP, 5,2) + '-' + SUBSTRING(P1_WORK_END_DATE_CP, 7,2)
			 WHEN #{pWork}='2' AND P2_WORK_END_DATE_CP IS NOT NULL THEN SUBSTRING(P2_WORK_END_DATE_CP, 1,4) + '-' +  SUBSTRING(P2_WORK_END_DATE_CP, 5,2) + '-' + SUBSTRING(P2_WORK_END_DATE_CP, 7,2)
			 WHEN #{pWork}='3' AND P3_WORK_END_DATE_CP IS NOT NULL THEN SUBSTRING(P3_WORK_END_DATE_CP, 1,4) + '-' +  SUBSTRING(P3_WORK_END_DATE_CP, 5,2) + '-' + SUBSTRING(P3_WORK_END_DATE_CP, 7,2)
			 WHEN #{pWork}='4' AND P4_WORK_END_DATE_CP IS NOT NULL THEN SUBSTRING(P4_WORK_END_DATE_CP, 1,4) + '-' +  SUBSTRING(P4_WORK_END_DATE_CP, 5,2) + '-' + SUBSTRING(P4_WORK_END_DATE_CP, 7,2)
		ELSE ''
		END AS WORK_END_DATE_CP 	
  FROM dbo.TB_WORK_CP A
 WHERE 1=1
  	AND (ISNULL(WORK_CONFIRM_CP,'N') = 'N' OR WORK_CONFIRM_CP = '')
	]]>
  	<if test="pWork == '1'.toString()">
	AND P1_PLAN_DATE_CP IS NOT NULL
	AND P1_WORK_END_DATE_CP IS NULL 
	</if>
	<if test="pWork == '2'.toString()">
	AND P2_PLAN_DATE_CP IS NOT NULL
	AND P2_WORK_END_DATE_CP IS NULL 
	</if>
	<if test="pWork == '3'.toString()">
	AND P3_PLAN_DATE_CP IS NOT NULL
	AND P3_WORK_END_DATE_CP IS NULL
	</if>
	<if test="pWork == '4'.toString()">
	AND P4_PLAN_DATE_CP IS NOT NULL
	AND P4_WORK_END_DATE_CP IS NULL
	</if>
	<![CDATA[

ORDER BY R_ORDER_PK_CP , R_ORDER_DETAIL_PK_CP 
 	]]>
	</select>
	
	<update id="CPMES_UI610_save_start" parameterType="hashmap">
		<![CDATA[  
	UPDATE dbo.TB_WORK_CP
	   SET UPDATE_DATE_CP = GETDATE()
	     ,  UPDATE_USER_CP = #{UPDATE_USER_CP}
	     ]]>
	  	<if test="pWork == '1'.toString()">
		, P1_WORKER_CP = #{UPDATE_USER_CP}
		, P1_WORK_START_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '2'.toString()">
		, P2_WORKER_CP = #{UPDATE_USER_CP}
		, P2_WORK_START_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '3'.toString()">
		, P3_WORKER_CP = #{UPDATE_USER_CP}
		, P3_WORK_START_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '4'.toString()">
		, P4_WORKER_CP = #{UPDATE_USER_CP}
		, P4_WORK_START_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<![CDATA[
	WHERE 1=1 
	  AND R_ORDER_PK_CP = #{R_ORDER_PK_CP} 
	  AND R_ORDER_DETAIL_PK_CP = #{R_ORDER_DETAIL_PK_CP}  
	   ]]>
	</update>
	
	
	
	<update id="CPMES_UI610_save_end" parameterType="hashmap">
		<![CDATA[  
	UPDATE dbo.TB_WORK_CP
	   SET UPDATE_DATE_CP = GETDATE()
	     , UPDATE_USER_CP = #{UPDATE_USER_CP}
	     ]]>
	  	<if test="pWork == '1'.toString()">
		, P1_WORKER_CP = #{UPDATE_USER_CP}
		, P1_WORK_END_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '2'.toString()">
		, P2_WORKER_CP = #{UPDATE_USER_CP}
		, P2_WORK_END_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '3'.toString()">
		, P3_WORKER_CP = #{UPDATE_USER_CP}
		, P3_WORK_END_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '4'.toString()">
		, P4_WORKER_CP = #{UPDATE_USER_CP}
		, P4_WORK_END_DATE_CP = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<![CDATA[
	WHERE 1=1 
	  AND R_ORDER_PK_CP = #{R_ORDER_PK_CP} 
	  AND R_ORDER_DETAIL_PK_CP = #{R_ORDER_DETAIL_PK_CP}  
	   ]]>
	</update>
	
	<select id="CPMES_UI610_searchCompYn" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	SELECT CASE WHEN P1_PLAN_DATE_CP IS NOT NULL AND (P1_WORK_START_DATE_CP IS NULL OR  P1_WORK_END_DATE_CP IS NULL) THEN 'N' 
	   	    WHEN P1_PLAN_DATE_CP IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM1_CP
	   	  , CASE WHEN P2_PLAN_DATE_CP IS NOT NULL AND (P2_WORK_START_DATE_CP IS NULL OR  P2_WORK_END_DATE_CP IS NULL) THEN 'N' 
	   	    WHEN P2_PLAN_DATE_CP IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM2_CP
	   	  , CASE WHEN P3_PLAN_DATE_CP IS NOT NULL AND (P3_WORK_START_DATE_CP IS NULL OR  P3_WORK_END_DATE_CP IS NULL) THEN 'N' 
	   	    WHEN P3_PLAN_DATE_CP IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM3_CP
	   	  , CASE WHEN P4_PLAN_DATE_CP IS NOT NULL AND (P4_WORK_START_DATE_CP IS NULL OR  P4_WORK_END_DATE_CP IS NULL) THEN 'N' 
	   	    WHEN P4_PLAN_DATE_CP IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM4_CP		
	   			
	   
	FROM dbo.TB_WORK_CP
	WHERE 1=1 
	  AND R_ORDER_PK_CP = #{R_ORDER_PK_CP} 
	  AND R_ORDER_DETAIL_PK_CP = #{R_ORDER_DETAIL_PK_CP}  
	]]>
	</select>
	
	<update id="CPMES_UI610_update_compYn" parameterType="hashmap">
		<![CDATA[  
	UPDATE dbo.TB_WORK_CP
	   SET WORK_CONFIRM_CP = #{WORK_CONFIRM_CP}
	WHERE 1=1 
	  AND R_ORDER_PK_CP = #{R_ORDER_PK_CP} 
	  AND R_ORDER_DETAIL_PK_CP = #{R_ORDER_DETAIL_PK_CP}  
	   ]]>
	</update>
	
	<select id="CPMES_UI620_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	
	SELECT R_ORDER_PK_CP
      
	  , (SELECT R_ORDER_NO_CP FROM dbo.TB_RECEIVE_ORDER_CP WHERE R_ORDER_PK_CP = A.R_ORDER_PK_CP) AS R_ORDER_NO_CP
	  , (SELECT R_ORDER_NAME_CP FROM dbo.TB_RECEIVE_ORDER_CP WHERE R_ORDER_PK_CP = A.R_ORDER_PK_CP) AS R_ORDER_NAME_CP
	  , (SELECT PRODUCT_NO_CP FROM dbo.TB_RECEIVE_ORDER_DETAIL_CP WHERE R_ORDER_PK_CP = A.R_ORDER_PK_CP AND R_ORDER_DETAIL_PK_CP = A.R_ORDER_DETAIL_PK_CP) AS PRODUCT_NO_CP
	  , (SELECT PRODUCT_NAME_CP FROM dbo.TB_RECEIVE_ORDER_DETAIL_CP WHERE R_ORDER_PK_CP = A.R_ORDER_PK_CP AND R_ORDER_DETAIL_PK_CP = A.R_ORDER_DETAIL_PK_CP) AS PRODUCT_NAME_CP
	  ,WORK_STATUS_CP
	  ,R_ORDER_DETAIL_PK_CP
      ,P1_WORKER_CP
	  ,SUBSTRING(P1_PLAN_DATE_CP, 1,4) + '-' + SUBSTRING(P1_PLAN_DATE_CP, 5,2) + '-' +  SUBSTRING(P1_PLAN_DATE_CP, 7,2) AS P1_PLAN_DATE_CP
	  ,SUBSTRING(P1_WORK_START_DATE_CP, 1,4) + '-' + SUBSTRING(P1_WORK_START_DATE_CP, 5,2) + '-' +  SUBSTRING(P1_WORK_START_DATE_CP, 7,2) AS P1_WORK_START_DATE_CP
	  ,SUBSTRING(P1_WORK_END_DATE_CP, 1,4) + '-' + SUBSTRING(P1_WORK_END_DATE_CP, 5,2) + '-' +  SUBSTRING(P1_WORK_END_DATE_CP, 7,2) AS P1_WORK_END_DATE_CP

		
	FROM 
		(
		
		SELECT R_ORDER_PK_CP
		      ,'제관공정' AS WORK_STATUS_CP
			  ,R_ORDER_DETAIL_PK_CP
		      ,P1_WORKER_CP
			  ,P1_PLAN_DATE_CP
		      ,P1_WORK_START_DATE_CP
		      ,P1_WORK_END_DATE_CP
		  FROM dbo.TB_WORK_CP
		 WHERE 1=1 
		   AND P1_WORKER_CP =#{pUserId}
		   AND P1_WORK_END_DATE_CP = REPLACE(#{pSearchStaDt}, '-','')
		UNION ALL
		SELECT R_ORDER_PK_CP
			 ,'용접공정' AS WORK_STATUS_CP
		      ,R_ORDER_DETAIL_PK_CP
		      ,P2_WORKER_CP
			  ,P2_PLAN_DATE_CP
		      ,P2_WORK_START_DATE_CP
		      ,P2_WORK_END_DATE_CP
		  FROM dbo.TB_WORK_CP
		 WHERE 1=1 
		   AND P2_WORKER_CP =#{pUserId}
		   AND P2_WORK_END_DATE_CP = REPLACE(#{pSearchStaDt}, '-','')
		UNION ALL
		SELECT R_ORDER_PK_CP
		      ,'가공공정' AS WORK_STATUS_CP
		      ,R_ORDER_DETAIL_PK_CP
		      ,P3_WORKER_CP
			  ,P3_PLAN_DATE_CP
		      ,P3_WORK_START_DATE_CP
		      ,P3_WORK_END_DATE_CP
		  FROM dbo.TB_WORK_CP
		 WHERE 1=1 
		   AND P3_WORKER_CP =#{pUserId}
		   AND P3_WORK_END_DATE_CP = REPLACE(#{pSearchStaDt}, '-','')
		UNION ALL
		SELECT R_ORDER_PK_CP
		      ,'조립공정' AS WORK_STATUS_CP
			  ,R_ORDER_DETAIL_PK_CP
		      ,P4_WORKER_CP
			  ,P4_PLAN_DATE_CP
		      ,P4_WORK_START_DATE_CP
		      ,P4_WORK_END_DATE_CP
		  FROM dbo.TB_WORK_CP
		 WHERE 1=1 
		   AND P4_WORKER_CP =#{pUserId}
		   AND P4_WORK_END_DATE_CP = REPLACE(#{pSearchStaDt}, '-','')
		
		) A
		
		ORDER BY P1_WORK_END_DATE_CP

	 ]]>
	</select>
	
	<select id="CPMES_UI630_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	WITH q AS
	    (
	    SELECT  1 AS num
	    UNION ALL
	    SELECT  num + 1
	    FROM    q
	    WHERE   num <= 11
	) 
	
	SELECT R_MONTH_CP
		  , MAX(K_TOTAL_SUM_COST_CP) AS K_TOTAL_SUM_COST_CP
		  , MAX(NK_TOTAL_SUM_COST_CP) AS NK_TOTAL_SUM_COST_CP
		  , MAX(K_NATION_TP_CNT_CP) AS K_NATION_TP_CNT_CP
		  , MAX(NK_NATION_TP_CNT_CP) AS NK_NATION_TP_CNT_CP
	FROM 
	(
		SELECT R_MONTH_CP
			 , CASE WHEN NATION_TP_CP = 'KO' THEN TOTAL_SUM_COST_CP
		       ELSE 0 END AS K_TOTAL_SUM_COST_CP
		     , CASE WHEN NATION_TP_CP != 'KO' THEN TOTAL_SUM_COST_CP
		       ELSE 0 END AS NK_TOTAL_SUM_COST_CP
		     , CASE WHEN NATION_TP_CP = 'KO' THEN NATION_TP_CNT_CP
		       ELSE 0 END AS K_NATION_TP_CNT_CP
		     , CASE WHEN NATION_TP_CP != 'KO' THEN NATION_TP_CNT_CP
		       ELSE 0 END AS NK_NATION_TP_CNT_CP
		FROM 
		(
		
			SELECT num AS R_MONTH_CP
				 , NATION_TP_CP
				 , ISNULL(SUM(SUM_COST_CP),0) AS TOTAL_SUM_COST_CP
			     , ISNULL(COUNT(NATION_TP_CP),0) AS NATION_TP_CNT_CP
			FROM (
			
				SELECT *   
				  FROM 
					  (SELECT FORMAT(num, '00') AS NUM FROM q) A
					  LEFT OUTER JOIN  
					  (
						SELECT ISNULL(SUM(A.FINAL_COST_CP),0) AS SUM_COST_CP
							 , A.R_ORDER_NO_CP
							 , CASE WHEN A.NATION_TP_CP = 'KO' THEN 'KO'
							   ELSE 'NKO'
							   END NATION_TP_CP
							 , SUBSTRING(R_ORDER_DATE_CP, 5,2) AS R_ORDER_MONTH_CP
						  FROM dbo.TB_RECEIVE_ORDER_CP A
						       
						 WHERE 1=1 
						   AND SUBSTRING(R_ORDER_DATE_CP, 1,4) = #{pYear}
					    GROUP BY A.R_ORDER_NO_CP, A.NATION_TP_CP, R_ORDER_DATE_CP
					
					
					  ) T1 ON T1.R_ORDER_MONTH_CP = A.num
			  
				) A
			GROUP BY NATION_TP_CP, num
		
		) T
	
	
	) A
	GROUP BY R_MONTH_CP
	 ]]>
	</select>
	
	<select id="CPMES_UI640_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	WITH q AS
	    (
	    SELECT  1 AS num
	    UNION ALL
	    SELECT  num + 1
	    FROM    q
	    WHERE   num <= 11
	) 
	
	SELECT R_MONTH_CP
		  , MAX(TOTAL_SUM_COST_CP) AS K_TOTAL_SUM_COST_CP
		  , MAX(NATION_TP_CNT_CP) AS K_NATION_TP_CNT_CP
		  
	FROM 
	(
		SELECT R_MONTH_CP , TOTAL_SUM_COST_CP, NATION_TP_CNT_CP
			 
		FROM 
		(
		
			SELECT num AS R_MONTH_CP
				 , ISNULL(SUM(SUM_COST_CP),0) AS TOTAL_SUM_COST_CP
				 , ISNULL(COUNT(P_ORDER_NO_CP),0) AS NATION_TP_CNT_CP
			FROM (
			
				SELECT *   
				  FROM 
					  (SELECT FORMAT(num, '00') AS NUM FROM q) A
					  LEFT OUTER JOIN  
					  (
						SELECT ISNULL(SUM(A.FINAL_COST_CP),0) AS SUM_COST_CP
							 , A.P_ORDER_NO_CP
							 , SUBSTRING(P_ORDER_DATE_CP, 5,2) AS R_ORDER_MONTH_CP
						  FROM dbo.TB_PURCHASE_ORDER_CP A
						       
						 WHERE 1=1 
						   AND SUBSTRING(P_ORDER_DATE_CP, 1,4) = #{pYear}
						   AND R_ORDER_PK_CP IS NOT NULL
					    GROUP BY A.P_ORDER_NO_CP, P_ORDER_DATE_CP
					
					
					  ) T1 ON T1.R_ORDER_MONTH_CP = A.num
			  
				) A
			GROUP BY num
		
		) T
	
	
	) A
	GROUP BY R_MONTH_CP
	ORDER BY R_MONTH_CP
	]]>
	</select>
	<select id="CPMES_UI650_searchList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		WITH q AS
			(
			SELECT  1 AS num
			UNION ALL
			SELECT  num + 1
			FROM    q
			WHERE   num <= 11
		) 
		
		SELECT R_MONTH_CP
			  , MAX(TOTAL_SUM_COST_CP) AS K_TOTAL_SUM_COST_CP
			  , MAX(NATION_TP_CNT_CP) AS K_NATION_TP_CNT_CP
			  
		FROM 
		(
			SELECT R_MONTH_CP , TOTAL_SUM_COST_CP, NATION_TP_CNT_CP
				 
			FROM 
			(
			
				SELECT num AS R_MONTH_CP
					 , ISNULL(SUM(SUM_COST_CP),0) AS TOTAL_SUM_COST_CP
					 , ISNULL(COUNT(R_ORDER_NO_CP),0) AS NATION_TP_CNT_CP
				FROM (
				
					SELECT *   
					  FROM 
						  (SELECT FORMAT(num, '00') AS NUM FROM q) A
						  LEFT OUTER JOIN  
						  (
							SELECT ISNULL(SUM(A.FINAL_COST_CP),0) AS SUM_COST_CP
								 , A.R_ORDER_NO_CP
								 , SUBSTRING(SHIPPING_DATE_CP, 5,2) AS R_ORDER_MONTH_CP
							  FROM dbo.TB_RECEIVE_ORDER_CP A
								   
							 WHERE 1=1 
							   AND SUBSTRING(SHIPPING_DATE_CP, 1,4) = #{pYear}
							   
							GROUP BY A.R_ORDER_NO_CP, SHIPPING_DATE_CP
						
						
						  ) T1 ON T1.R_ORDER_MONTH_CP = A.num
				  
					) A
				GROUP BY num
			
			) T
		
		
		) A
		GROUP BY R_MONTH_CP
		ORDER BY R_MONTH_CP
		]]>
		</select>
		<select id="CPMES_UI660_searchList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		
		WITH q AS
			(
			SELECT  1 AS num
			UNION ALL
			SELECT  num + 1
			FROM    q
			WHERE   num <= 11
		) 
	
		SELECT NUM  
			  , SUM(SUM_FINAL_COST_CP) over(order by NUM rows unbounded preceding) as SUM_FINAL_COST_MONTH_CP
			  , SUM(SUM_GENERAL_COST_CP) over(order by NUM rows unbounded preceding) as SUM_GENERAL_COST_MONTH_CP
			  , SUM(P_COST_CP) over(order by NUM rows unbounded preceding) as P_COST_MONTH_CP
		FROM 
		 (
		  
			SELECT NUM 
				 , SUM(ISNULL(SUM_FINAL_COST_CP,0)) AS SUM_FINAL_COST_CP
				 , SUM(ISNULL(SUM_GENERAL_COST_CP,0)) AS SUM_GENERAL_COST_CP
				 , SUM(ISNULL(P_COST_CP,0)) AS P_COST_CP
				 
	
	
			  FROM
			  (
				SELECT *   
					FROM 
						(SELECT FORMAT(num, '00') AS NUM FROM q) A
						LEFT OUTER JOIN  
						(	
						
						SELECT R_ORDER_NO_CP
							 , SUM(SUM_FINAL_COST_CP) AS SUM_FINAL_COST_CP
							 , SUM(SUM_GENERAL_COST_CP) AS SUM_GENERAL_COST_CP
							 , SUM(P_COST_CP) AS P_COST_CP
							 , R_ORDER_MONTH_CP
						 FROM 
						 (
							SELECT ISNULL(A.FINAL_COST_CP,0) AS SUM_FINAL_COST_CP
								 , ISNULL(A.GENERAL_COST_CP,0) AS SUM_GENERAL_COST_CP
								 , ISNULL( (SELECT SUM(FINAL_COST_CP) FROM TB_PURCHASE_ORDER_CP WHERE R_ORDER_PK_CP = A.R_ORDER_PK_CP ), 0) AS P_COST_CP 
								 , A.R_ORDER_NO_CP
								 , SUBSTRING(R_ORDER_DATE_CP, 5,2) AS R_ORDER_MONTH_CP
							  FROM dbo.TB_RECEIVE_ORDER_CP A
								   
							 WHERE 1=1 
							   AND SUBSTRING(R_ORDER_DATE_CP, 1,4) = #{pYear}
						) A	   
						GROUP BY A.R_ORDER_NO_CP, R_ORDER_MONTH_CP
						) T1 ON T1.R_ORDER_MONTH_CP = A.num
				  
					) A
				GROUP BY NUM
			
			
			) A
			GROUP BY NUM, P_COST_CP, SUM_FINAL_COST_CP, SUM_GENERAL_COST_CP
			ORDER BY NUM
			
		]]>
		</select>
		
	</mapper>