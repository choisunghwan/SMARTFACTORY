<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ui600">
	<select id="PSMES_UI610_searchuser" parameterType="hashmap" resultType="hashmap">
	<![CDATA[  
	SELECT USER_ID
      ,USER_NAME
      ,USER_PW
      ,USER_AUTH
      ,USER_DISP
      ,JOIN_DATE
      ,CREATE_DATE
      ,CREATE_USER
      ,UPDATE_DATE
      ,UPDATE_USER
  FROM dbo.TB_HUBIZICT_USER
WHERE USER_AUTH ='SYS003'
ORDER BY USER_NAME
		]]>
	</select>
	<select id="PSMES_UI610_searchwork" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	SELECT R_ORDER_PK
      ,R_ORDER_DETAIL_PK
      , CASE WHEN #{pWork}='1' AND P1_WORK_START_DATE IS NULL THEN ''
	         WHEN #{pWork}='1' AND P1_WORK_START_DATE IS NOT NULL THEN '▶'
			 WHEN #{pWork}='2' AND P2_WORK_START_DATE IS NULL THEN ''
	         WHEN #{pWork}='2' AND P2_WORK_START_DATE IS NOT NULL THEN '▶'
			 WHEN #{pWork}='3' AND P3_WORK_START_DATE IS NULL THEN ''
	         WHEN #{pWork}='3' AND P3_WORK_START_DATE IS NOT NULL THEN '▶'
			 WHEN #{pWork}='4' AND P4_WORK_START_DATE IS NULL THEN ''
	         WHEN #{pWork}='4' AND P4_WORK_START_DATE IS NOT NULL THEN '▶'
	    END AS STATUS_IMG
      , CASE WHEN #{pWork}='1' AND P1_WORK_START_DATE IS NULL THEN '작업지시'
	         WHEN #{pWork}='1' AND P1_WORK_START_DATE IS NOT NULL THEN '작업중'
			 WHEN #{pWork}='2' AND P2_WORK_START_DATE IS NULL THEN '작업지시'
	         WHEN #{pWork}='2' AND P2_WORK_START_DATE IS NOT NULL THEN '작업중'
			 WHEN #{pWork}='3' AND P3_WORK_START_DATE IS NULL THEN '작업지시'
	         WHEN #{pWork}='3' AND P3_WORK_START_DATE IS NOT NULL THEN '작업중'
			 WHEN #{pWork}='4' AND P4_WORK_START_DATE IS NULL THEN '작업지시'
	         WHEN #{pWork}='4' AND P4_WORK_START_DATE IS NOT NULL THEN '작업중'
		END AS STATUS_NM
	  , CASE WHEN #{pWork} = '1' THEN '제관공정'  
	         WHEN #{pWork} = '2' THEN '용접공정' 
			 WHEN #{pWork} = '3' THEN '가공공정' 
			 WHEN #{pWork} = '4' THEN '조립공정' 
		END AS WORK_NM
	  , (SELECT '['+R_ORDER_NO + '] ' + R_ORDER_NAME FROM TB_RECEIVE_ORDER WHERE R_ORDER_PK = A.R_ORDER_PK) AS ORDER_NAME
	  , (SELECT '['+PRODUCT_NO + '] ' + PRODUCT_NAME FROM TB_RECEIVE_ORDER_DETAIL WHERE R_ORDER_DETAIL_PK = A.R_ORDER_DETAIL_PK) AS PRODUCT_NAME
	  , CASE WHEN #{pWork}='1' AND P1_PLAN_DATE IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE, 7,2)
	         WHEN #{pWork}='2' AND P1_PLAN_DATE IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE, 7,2)
			 WHEN #{pWork}='3' AND P1_PLAN_DATE IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE, 7,2)
			 WHEN #{pWork}='4' AND P1_PLAN_DATE IS NOT NULL THEN SUBSTRING(P1_PLAN_DATE, 1,4) + '-' +  SUBSTRING(P1_PLAN_DATE, 5,2) + '-' + SUBSTRING(P1_PLAN_DATE, 7,2)
		ELSE ''
		END AS PLAN_DATE
	  , CASE WHEN #{pWork}='1' AND P1_WORKER IS NOT NULL THEN (SELECT USER_NAME FROM dbo.TB_HUBIZICT_USER WHERE USER_ID = A.P1_WORKER) 
	         WHEN #{pWork}='2' AND P2_WORKER IS NOT NULL THEN (SELECT USER_NAME FROM dbo.TB_HUBIZICT_USER WHERE USER_ID = A.P2_WORKER) 
			 WHEN #{pWork}='3' AND P3_WORKER IS NOT NULL THEN (SELECT USER_NAME FROM dbo.TB_HUBIZICT_USER WHERE USER_ID = A.P3_WORKER) 
			 WHEN #{pWork}='4' AND P4_WORKER IS NOT NULL THEN (SELECT USER_NAME FROM dbo.TB_HUBIZICT_USER WHERE USER_ID = A.P4_WORKER) 
		ELSE ''
		END AS WORKER

	  , CASE WHEN #{pWork}='1' AND P1_WORK_START_DATE IS NOT NULL THEN SUBSTRING(P1_WORK_START_DATE, 1,4) + '-' +  SUBSTRING(P1_WORK_START_DATE, 5,2) + '-' + SUBSTRING(P1_WORK_START_DATE, 7,2)
			 WHEN #{pWork}='2' AND P2_WORK_START_DATE IS NOT NULL THEN SUBSTRING(P2_WORK_START_DATE, 1,4) + '-' +  SUBSTRING(P2_WORK_START_DATE, 5,2) + '-' + SUBSTRING(P2_WORK_START_DATE, 7,2)
			 WHEN #{pWork}='3' AND P3_WORK_START_DATE IS NOT NULL THEN SUBSTRING(P3_WORK_START_DATE, 1,4) + '-' +  SUBSTRING(P3_WORK_START_DATE, 5,2) + '-' + SUBSTRING(P3_WORK_START_DATE, 7,2)
			 WHEN #{pWork}='4' AND P4_WORK_START_DATE IS NOT NULL THEN SUBSTRING(P4_WORK_START_DATE, 1,4) + '-' +  SUBSTRING(P4_WORK_START_DATE, 5,2) + '-' + SUBSTRING(P4_WORK_START_DATE, 7,2)
		ELSE ''
		END AS WORK_START_DATE 	
	  , CASE WHEN #{pWork}='1' AND P1_WORK_END_DATE IS NOT NULL THEN SUBSTRING(P1_WORK_END_DATE, 1,4) + '-' +  SUBSTRING(P1_WORK_END_DATE, 5,2) + '-' + SUBSTRING(P1_WORK_END_DATE, 7,2)
			 WHEN #{pWork}='2' AND P2_WORK_END_DATE IS NOT NULL THEN SUBSTRING(P2_WORK_END_DATE, 1,4) + '-' +  SUBSTRING(P2_WORK_END_DATE, 5,2) + '-' + SUBSTRING(P2_WORK_END_DATE, 7,2)
			 WHEN #{pWork}='3' AND P3_WORK_END_DATE IS NOT NULL THEN SUBSTRING(P3_WORK_END_DATE, 1,4) + '-' +  SUBSTRING(P3_WORK_END_DATE, 5,2) + '-' + SUBSTRING(P3_WORK_END_DATE, 7,2)
			 WHEN #{pWork}='4' AND P4_WORK_END_DATE IS NOT NULL THEN SUBSTRING(P4_WORK_END_DATE, 1,4) + '-' +  SUBSTRING(P4_WORK_END_DATE, 5,2) + '-' + SUBSTRING(P4_WORK_END_DATE, 7,2)
		ELSE ''
		END AS WORK_END_DATE 	
  FROM dbo.TB_WORK A
 WHERE 1=1
  	AND (ISNULL(WORK_CONFIRM,'N') = 'N' OR WORK_CONFIRM = '')
	]]>
  	<if test="pWork == '1'.toString()">
	AND P1_PLAN_DATE IS NOT NULL
	AND P1_WORK_END_DATE IS NULL 
	</if>
	<if test="pWork == '2'.toString()">
	AND P2_PLAN_DATE IS NOT NULL
	AND P2_WORK_END_DATE IS NULL 
	</if>
	<if test="pWork == '3'.toString()">
	AND P3_PLAN_DATE IS NOT NULL
	AND P3_WORK_END_DATE IS NULL
	</if>
	<if test="pWork == '4'.toString()">
	AND P4_PLAN_DATE IS NOT NULL
	AND P4_WORK_END_DATE IS NULL
	</if>
	<![CDATA[

ORDER BY R_ORDER_PK , R_ORDER_DETAIL_PK 
 	]]>
	</select>
	
	<update id="PSMES_UI610_save_start" parameterType="hashmap">
		<![CDATA[  
	UPDATE dbo.TB_WORK
	   SET UPDATE_DATE = GETDATE()
	     ,  UPDATE_USER = #{UPDATE_USER}
	     ]]>
	  	<if test="pWork == '1'.toString()">
		, P1_WORKER = #{UPDATE_USER}
		, P1_WORK_START_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '2'.toString()">
		, P2_WORKER = #{UPDATE_USER}
		, P2_WORK_START_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '3'.toString()">
		, P3_WORKER = #{UPDATE_USER}
		, P3_WORK_START_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '4'.toString()">
		, P4_WORKER = #{UPDATE_USER}
		, P4_WORK_START_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<![CDATA[
	WHERE 1=1 
	  AND R_ORDER_PK = #{R_ORDER_PK} 
	  AND R_ORDER_DETAIL_PK = #{R_ORDER_DETAIL_PK}  
	   ]]>
	</update>
	
	
	
	<update id="PSMES_UI610_save_end" parameterType="hashmap">
		<![CDATA[  
	UPDATE dbo.TB_WORK
	   SET UPDATE_DATE = GETDATE()
	     , UPDATE_USER = #{UPDATE_USER}
	     ]]>
	  	<if test="pWork == '1'.toString()">
		, P1_WORKER = #{UPDATE_USER}
		, P1_WORK_END_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '2'.toString()">
		, P2_WORKER = #{UPDATE_USER}
		, P2_WORK_END_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '3'.toString()">
		, P3_WORKER = #{UPDATE_USER}
		, P3_WORK_END_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<if test="pWork == '4'.toString()">
		, P4_WORKER = #{UPDATE_USER}
		, P4_WORK_END_DATE = CONVERT(CHAR(8), GETDATE(), 112)
		</if>
		<![CDATA[
	WHERE 1=1 
	  AND R_ORDER_PK = #{R_ORDER_PK} 
	  AND R_ORDER_DETAIL_PK = #{R_ORDER_DETAIL_PK}  
	   ]]>
	</update>
	
	<select id="PSMES_UI610_searchCompYn" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	SELECT CASE WHEN P1_PLAN_DATE IS NOT NULL AND (P1_WORK_START_DATE IS NULL OR  P1_WORK_END_DATE IS NULL) THEN 'N' 
	   	    WHEN P1_PLAN_DATE IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM1
	   	  , CASE WHEN P2_PLAN_DATE IS NOT NULL AND (P2_WORK_START_DATE IS NULL OR  P2_WORK_END_DATE IS NULL) THEN 'N' 
	   	    WHEN P2_PLAN_DATE IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM2
	   	  , CASE WHEN P3_PLAN_DATE IS NOT NULL AND (P3_WORK_START_DATE IS NULL OR  P3_WORK_END_DATE IS NULL) THEN 'N' 
	   	    WHEN P3_PLAN_DATE IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM3
	   	  , CASE WHEN P4_PLAN_DATE IS NOT NULL AND (P4_WORK_START_DATE IS NULL OR  P4_WORK_END_DATE IS NULL) THEN 'N' 
	   	    WHEN P4_PLAN_DATE IS NULL THEN 'Y'
	   		ELSE 'Y'
	   		END AS WORK_CONFIRM4		
	   			
	   
	FROM dbo.TB_WORK
	WHERE 1=1 
	  AND R_ORDER_PK = #{R_ORDER_PK} 
	  AND R_ORDER_DETAIL_PK = #{R_ORDER_DETAIL_PK}  
	]]>
	</select>
	
	<update id="PSMES_UI610_update_compYn" parameterType="hashmap">
		<![CDATA[  
	UPDATE dbo.TB_WORK
	   SET WORK_CONFIRM = #{WORK_CONFIRM}
	WHERE 1=1 
	  AND R_ORDER_PK = #{R_ORDER_PK} 
	  AND R_ORDER_DETAIL_PK = #{R_ORDER_DETAIL_PK}  
	   ]]>
	</update>
	
	<select id="PSMES_UI620_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	
	SELECT R_ORDER_PK
      
	  , (SELECT R_ORDER_NO FROM dbo.TB_RECEIVE_ORDER WHERE R_ORDER_PK = A.R_ORDER_PK) AS R_ORDER_NO
	  , (SELECT R_ORDER_NAME FROM dbo.TB_RECEIVE_ORDER WHERE R_ORDER_PK = A.R_ORDER_PK) AS R_ORDER_NAME
	  , (SELECT PRODUCT_NO FROM dbo.TB_RECEIVE_ORDER_DETAIL WHERE R_ORDER_PK = A.R_ORDER_PK AND R_ORDER_DETAIL_PK = A.R_ORDER_DETAIL_PK) AS PRODUCT_NO
	  , (SELECT PRODUCT_NAME FROM dbo.TB_RECEIVE_ORDER_DETAIL WHERE R_ORDER_PK = A.R_ORDER_PK AND R_ORDER_DETAIL_PK = A.R_ORDER_DETAIL_PK) AS PRODUCT_NAME
	  ,WORK_STATUS
	  ,R_ORDER_DETAIL_PK
      ,P1_WORKER
	  ,SUBSTRING(P1_PLAN_DATE, 1,4) + '-' + SUBSTRING(P1_PLAN_DATE, 5,2) + '-' +  SUBSTRING(P1_PLAN_DATE, 7,2) AS P1_PLAN_DATE
	  ,SUBSTRING(P1_WORK_START_DATE, 1,4) + '-' + SUBSTRING(P1_WORK_START_DATE, 5,2) + '-' +  SUBSTRING(P1_WORK_START_DATE, 7,2) AS P1_WORK_START_DATE
	  ,SUBSTRING(P1_WORK_END_DATE, 1,4) + '-' + SUBSTRING(P1_WORK_END_DATE, 5,2) + '-' +  SUBSTRING(P1_WORK_END_DATE, 7,2) AS P1_WORK_END_DATE

		
	FROM 
		(
		
		SELECT R_ORDER_PK
		      ,'제관공정' AS WORK_STATUS
			  ,R_ORDER_DETAIL_PK
		      ,P1_WORKER
			  ,P1_PLAN_DATE
		      ,P1_WORK_START_DATE
		      ,P1_WORK_END_DATE
		  FROM dbo.TB_WORK
		 WHERE 1=1 
		   AND P1_WORKER =#{pUserId}
		   AND P1_WORK_END_DATE = REPLACE(#{pSearchStaDt}, '-','')
		UNION ALL
		SELECT R_ORDER_PK
			 ,'용접공정' AS WORK_STATUS
		      ,R_ORDER_DETAIL_PK
		      ,P2_WORKER
			  ,P2_PLAN_DATE
		      ,P2_WORK_START_DATE
		      ,P2_WORK_END_DATE
		  FROM dbo.TB_WORK
		 WHERE 1=1 
		   AND P2_WORKER =#{pUserId}
		   AND P2_WORK_END_DATE = REPLACE(#{pSearchStaDt}, '-','')
		UNION ALL
		SELECT R_ORDER_PK
		      ,'가공공정' AS WORK_STATUS
		      ,R_ORDER_DETAIL_PK
		      ,P3_WORKER
			  ,P3_PLAN_DATE
		      ,P3_WORK_START_DATE
		      ,P3_WORK_END_DATE
		  FROM dbo.TB_WORK
		 WHERE 1=1 
		   AND P3_WORKER =#{pUserId}
		   AND P3_WORK_END_DATE = REPLACE(#{pSearchStaDt}, '-','')
		UNION ALL
		SELECT R_ORDER_PK
		      ,'조립공정' AS WORK_STATUS
			  ,R_ORDER_DETAIL_PK
		      ,P4_WORKER
			  ,P4_PLAN_DATE
		      ,P4_WORK_START_DATE
		      ,P4_WORK_END_DATE
		  FROM dbo.TB_WORK
		 WHERE 1=1 
		   AND P4_WORKER =#{pUserId}
		   AND P4_WORK_END_DATE = REPLACE(#{pSearchStaDt}, '-','')
		
		) A
		
		ORDER BY P1_WORK_END_DATE

	 ]]>
	</select>
	
	<select id="PSMES_UI630_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	WITH q AS
	    (
	    SELECT  1 AS num
	    UNION ALL
	    SELECT  num + 1
	    FROM    q
	    WHERE   num <= 11
	) 
	
	SELECT R_MONTH
		  , MAX(K_TOTAL_SUM_COST) AS K_TOTAL_SUM_COST
		  , MAX(NK_TOTAL_SUM_COST) AS NK_TOTAL_SUM_COST
		  , MAX(K_NATION_TP_CNT) AS K_NATION_TP_CNT
		  , MAX(NK_NATION_TP_CNT) AS NK_NATION_TP_CNT
	FROM 
	(
		SELECT R_MONTH 
			 , CASE WHEN NATION_TP = 'KO' THEN TOTAL_SUM_COST
		       ELSE 0 END AS K_TOTAL_SUM_COST
		     , CASE WHEN NATION_TP != 'KO' THEN TOTAL_SUM_COST
		       ELSE 0 END AS NK_TOTAL_SUM_COST
		     , CASE WHEN NATION_TP = 'KO' THEN NATION_TP_CNT
		       ELSE 0 END AS K_NATION_TP_CNT
		     , CASE WHEN NATION_TP != 'KO' THEN NATION_TP_CNT
		       ELSE 0 END AS NK_NATION_TP_CNT
		FROM 
		(
		
			SELECT num AS R_MONTH
				 , NATION_TP
				 , ISNULL(SUM(SUM_COST),0) AS TOTAL_SUM_COST
			     , ISNULL(COUNT(NATION_TP),0) AS NATION_TP_CNT
			FROM (
			
				SELECT *   
				  FROM 
					  (SELECT FORMAT(num, '00') AS NUM FROM q) A
					  LEFT OUTER JOIN  
					  (
						SELECT ISNULL(SUM(A.FINAL_COST),0) AS SUM_COST
							 , A.R_ORDER_NO
							 , CASE WHEN A.NATION_TP = 'KO' THEN 'KO'
							   ELSE 'NKO'
							   END NATION_TP
							 , SUBSTRING(R_ORDER_DATE, 5,2) AS R_ORDER_MONTH
						  FROM dbo.TB_RECEIVE_ORDER A
						       
						 WHERE 1=1 
						   AND SUBSTRING(R_ORDER_DATE, 1,4) = #{pYear}
					    GROUP BY A.R_ORDER_NO, A.NATION_TP, R_ORDER_DATE
					
					
					  ) T1 ON T1.R_ORDER_MONTH = A.num
			  
				) A
			GROUP BY NATION_TP, num
		
		) T
	
	
	) A
	GROUP BY R_MONTH
	 ]]>
	</select>
	
	<select id="PSMES_UI640_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	WITH q AS
	    (
	    SELECT  1 AS num
	    UNION ALL
	    SELECT  num + 1
	    FROM    q
	    WHERE   num <= 11
	) 
	
	SELECT R_MONTH
		  , MAX(TOTAL_SUM_COST) AS K_TOTAL_SUM_COST
		  , MAX(NATION_TP_CNT) AS K_NATION_TP_CNT
		  
	FROM 
	(
		SELECT R_MONTH , TOTAL_SUM_COST, NATION_TP_CNT
			 
		FROM 
		(
		
			SELECT num AS R_MONTH
				 , ISNULL(SUM(SUM_COST),0) AS TOTAL_SUM_COST
				 , ISNULL(COUNT(P_ORDER_NO_CP),0) AS NATION_TP_CNT
			FROM (
			
				SELECT *   
				  FROM 
					  (SELECT FORMAT(num, '00') AS NUM FROM q) A
					  LEFT OUTER JOIN  
					  (
						SELECT ISNULL(SUM(A.FINAL_COST),0) AS SUM_COST
							 , A.P_ORDER_NO_CP
							 , SUBSTRING(P_ORDER_DATE, 5,2) AS R_ORDER_MONTH
						  FROM dbo.TB_PURCHASE_ORDER A
						       
						 WHERE 1=1 
						   AND SUBSTRING(P_ORDER_DATE, 1,4) = #{pYear}
						   AND R_ORDER_PK IS NOT NULL
					    GROUP BY A.P_ORDER_NO_CP, P_ORDER_DATE
					
					
					  ) T1 ON T1.R_ORDER_MONTH = A.num
			  
				) A
			GROUP BY num
		
		) T
	
	
	) A
	GROUP BY R_MONTH
	ORDER BY R_MONTH
	]]>
	</select>
	<select id="PSMES_UI650_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	WITH q AS
	    (
	    SELECT  1 AS num
	    UNION ALL
	    SELECT  num + 1
	    FROM    q
	    WHERE   num <= 11
	) 
	
	SELECT R_MONTH
		  , MAX(TOTAL_SUM_COST) AS K_TOTAL_SUM_COST
		  , MAX(NATION_TP_CNT) AS K_NATION_TP_CNT
		  
	FROM 
	(
		SELECT R_MONTH , TOTAL_SUM_COST, NATION_TP_CNT
			 
		FROM 
		(
		
			SELECT num AS R_MONTH
				 , ISNULL(SUM(SUM_COST),0) AS TOTAL_SUM_COST
				 , ISNULL(COUNT(R_ORDER_NO),0) AS NATION_TP_CNT
			FROM (
			
				SELECT *   
				  FROM 
					  (SELECT FORMAT(num, '00') AS NUM FROM q) A
					  LEFT OUTER JOIN  
					  (
						SELECT ISNULL(SUM(A.FINAL_COST),0) AS SUM_COST
							 , A.R_ORDER_NO
							 , SUBSTRING(SHIPPING_DATE, 5,2) AS R_ORDER_MONTH
						  FROM dbo.TB_RECEIVE_ORDER A
						       
						 WHERE 1=1 
						   AND SUBSTRING(SHIPPING_DATE, 1,4) = #{pYear}
						   
					    GROUP BY A.R_ORDER_NO, SHIPPING_DATE
					
					
					  ) T1 ON T1.R_ORDER_MONTH = A.num
			  
				) A
			GROUP BY num
		
		) T
	
	
	) A
	GROUP BY R_MONTH
	ORDER BY R_MONTH
	]]>
	</select>
	<select id="PSMES_UI660_searchList" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
	
	WITH q AS
	    (
	    SELECT  1 AS num
	    UNION ALL
	    SELECT  num + 1
	    FROM    q
	    WHERE   num <= 11
	) 

	SELECT NUM  
	      , SUM(SUM_FINAL_COST) over(order by NUM rows unbounded preceding) as SUM_FINAL_COST_MONTH
		  , SUM(SUM_GENERAL_COST) over(order by NUM rows unbounded preceding) as SUM_GENERAL_COST_MONTH
		  , SUM(P_COST) over(order by NUM rows unbounded preceding) as P_COST_MONTH
	FROM 
	 (
	  
		SELECT NUM 
		     , SUM(ISNULL(SUM_FINAL_COST,0)) AS SUM_FINAL_COST
			 , SUM(ISNULL(SUM_GENERAL_COST,0)) AS SUM_GENERAL_COST
			 , SUM(ISNULL(P_COST,0)) AS P_COST
			 


		  FROM
		  (
			SELECT *   
				FROM 
					(SELECT FORMAT(num, '00') AS NUM FROM q) A
					LEFT OUTER JOIN  
					(	
					
					SELECT R_ORDER_NO
						 , SUM(SUM_FINAL_COST) AS SUM_FINAL_COST
						 , SUM(SUM_GENERAL_COST) AS SUM_GENERAL_COST
						 , SUM(P_COST) AS P_COST
						 , R_ORDER_MONTH
					 FROM 
					 (
						SELECT ISNULL(A.FINAL_COST,0) AS SUM_FINAL_COST
							 , ISNULL(A.GENERAL_COST,0) AS SUM_GENERAL_COST
							 , ISNULL( (SELECT SUM(FINAL_COST) FROM TB_PURCHASE_ORDER WHERE R_ORDER_PK = A.R_ORDER_PK ), 0) AS P_COST 
							 , A.R_ORDER_NO
							 , SUBSTRING(R_ORDER_DATE, 5,2) AS R_ORDER_MONTH
						  FROM dbo.TB_RECEIVE_ORDER A
						       
						 WHERE 1=1 
						   AND SUBSTRING(R_ORDER_DATE, 1,4) = #{pYear}
					) A	   
					GROUP BY A.R_ORDER_NO, R_ORDER_MONTH
					) T1 ON T1.R_ORDER_MONTH = A.num
			  
				) A
			GROUP BY NUM
		
		
		) A
		GROUP BY NUM, P_COST, SUM_FINAL_COST, SUM_GENERAL_COST
		ORDER BY NUM
		
	]]>
	</select>
	
</mapper>